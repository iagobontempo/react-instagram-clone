{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iago\\\\desktop\\\\cursoreact\\\\frontend\\\\src\\\\pages\\\\Feed.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport './Feed.css';\nimport more from \"../assets/more.svg\";\nimport like from \"../assets/like.svg\";\nimport comment from \"../assets/comment.svg\";\nimport send from \"../assets/send.svg\";\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feed: []\n    };\n\n    this.handleLike = id => {\n      api.post(\"/posts/\".concat(id, \"/like\"));\n    };\n  }\n\n  async componentDidMount() {\n    // Componente em tipo Classe, usa-se este metodo que faz com que seja executado automaticamente quando \n    const response = await api.get('posts'); //                                                o componente for montado em tela\n\n    this.setState({\n      feed: response.data\n    });\n  }\n\n  render() {\n    // Metodo obrigatorio quando escrito componente em tipo Classe!\n    return React.createElement(\"section\", {\n      id: \"post-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.feed.map(post => React.createElement(\"article\", {\n      key: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.author), React.createElement(\"span\", {\n      className: \"place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, post.place)), React.createElement(\"img\", {\n      src: more,\n      alt: \"Mais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: \"http://localhost:3333/files/\".concat(post.image),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleLike(post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: like,\n      alt: \"Like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: comment,\n      alt: \"Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: send,\n      alt: \"Send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, post.likes), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, post.description, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, post.hashtags))))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:\\Users\\Iago\\desktop\\cursoreact\\frontend\\src\\pages\\Feed.js"],"names":["React","Component","api","io","Feed","state","feed","handleLike","id","post","componentDidMount","response","get","setState","data","render","map","_id","author","place","more","image","like","comment","send","likes","description","hashtags"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;;;;;;AAOA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE;AADF,KADiB;;AAAA,SAWzBC,UAXyB,GAWZC,EAAE,IAAI;AACfN,MAAAA,GAAG,CAACO,IAAJ,kBAAmBD,EAAnB;AACH,KAbwB;AAAA;;AAKzB,QAAME,iBAAN,GAA0B;AAAG;AACzB,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,OAAR,CAAvB,CADsB,CACqB;;AAE3C,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEK,QAAQ,CAACG;AAAjB,KAAd;AACH;;AAMDC,EAAAA,MAAM,GAAG;AAAE;AACP,WACI;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAoBP,IAAI,IACrB;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACQ,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,IAAI,CAACS,MAAZ,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBT,IAAI,CAACU,KAA9B,CAFJ,CADJ,EAKI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EASI;AAAK,MAAA,GAAG,wCAAiCX,IAAI,CAACY,KAAtC,CAAR;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKd,UAAL,CAAgBE,IAAI,CAACQ,GAArB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAEK,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAII;AAAK,MAAA,GAAG,EAAEC,OAAV;AAAmB,MAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASf,IAAI,CAACgB,KAAd,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,IAAI,CAACiB,WADV,EAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOjB,IAAI,CAACkB,QAAZ,CAFZ,CAVJ,CAXJ,CADH,CADL,CADJ;AAkCH;;AAlDwB;;AAqD7B,eAAevB,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport api from '../services/api'\r\nimport io from 'socket.io-client'\r\n\r\nimport './Feed.css'\r\n\r\nimport more from '../assets/more.svg'\r\nimport like from '../assets/like.svg'\r\nimport comment from '../assets/comment.svg'\r\nimport send from '../assets/send.svg'\r\n\r\nclass Feed extends Component {\r\n    state = {\r\n        feed: [],\r\n    }\r\n\r\n    async componentDidMount() {  // Componente em tipo Classe, usa-se este metodo que faz com que seja executado automaticamente quando \r\n        const response = await api.get('posts')    //                                                o componente for montado em tela\r\n\r\n        this.setState({ feed: response.data })\r\n    }\r\n\r\n    handleLike = id => {\r\n        api.post(`/posts/${id}/like`)\r\n    }\r\n\r\n    render() { // Metodo obrigatorio quando escrito componente em tipo Classe!\r\n        return (\r\n            <section id=\"post-list\">\r\n                {this.state.feed.map(post => (\r\n                    <article key={post._id}>\r\n                        <header>\r\n                            <div className=\"user-info\">\r\n                                <span>{post.author}</span>\r\n                                <span className=\"place\">{post.place}</span>\r\n                            </div>\r\n                            <img src={more} alt=\"Mais\" />\r\n                        </header>\r\n\r\n                        <img src={`http://localhost:3333/files/${post.image}`} alt=\"\" />\r\n\r\n                        <footer>\r\n                            <div className=\"actions\">\r\n                                <button type=\"button\" onClick={() => this.handleLike(post._id)}>\r\n                                <img src={like} alt=\"Like\" />\r\n                                </button>\r\n                                <img src={comment} alt=\"Comment\" />\r\n                                <img src={send} alt=\"Send\" />\r\n                            </div>\r\n\r\n                            <strong>{post.likes}</strong>\r\n                            <p>\r\n                                {post.description}\r\n                                        <span>{post.hashtags}</span>\r\n                            </p>\r\n\r\n                        </footer>\r\n                    </article>\r\n                ))}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feed"]},"metadata":{},"sourceType":"module"}