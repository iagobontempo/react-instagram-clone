{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iago\\\\Desktop\\\\CursoReact\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iago\\\\desktop\\\\cursoreact\\\\frontend\\\\src\\\\pages\\\\Feed.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport './Feed.css';\nimport more from \"../assets/more.svg\";\nimport like from \"../assets/like.svg\";\nimport comment from \"../assets/comment.svg\";\nimport send from \"../assets/send.svg\";\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      feed: []\n    };\n\n    _this.registerToSocket = function () {\n      var socket = io('http://localhost:3333'); //para faze-lo ouvir a mensagens do backend 'post' e 'like'\n\n      socket.on('post', function (newPost) {\n        _this.setState({\n          feed: [newPost].concat(_toConsumableArray(_this.state.feed))\n        }); //fazendo o post chegar como primeiro da lista\n\n      });\n      socket.on('like', function (likedPost) {\n        _this.setState({\n          feed: _this.state.feed.map(function (post) {\n            return post._id === likedPost._id ? likedPost : post;\n          })\n        });\n      });\n    };\n\n    _this.handleLike = function (id) {\n      api.post(\"/posts/\".concat(id, \"/like\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('posts');\n\n              case 2:\n                response = _context.sent;\n                //                                                o componente for montado em tela\n                this.registerToSocket();\n                this.setState({\n                  feed: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Metodo obrigatorio quando escrito componente em tipo Classe!\n      return React.createElement(\"section\", {\n        id: \"post-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.feed.map(function (post) {\n        return React.createElement(\"article\", {\n          key: post._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"user-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, post.author), React.createElement(\"span\", {\n          className: \"place\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, post.place)), React.createElement(\"img\", {\n          src: more,\n          alt: \"Mais\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })), React.createElement(\"img\", {\n          src: \"http://localhost:3333/files/\".concat(post.image),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"footer\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: function onClick() {\n            return _this2.handleLike(post._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: like,\n          alt: \"Like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(\"img\", {\n          src: comment,\n          alt: \"Comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: send,\n          alt: \"Send\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, post.likes), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, post.description, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, post.hashtags))));\n      }));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["C:\\Users\\Iago\\desktop\\cursoreact\\frontend\\src\\pages\\Feed.js"],"names":["React","Component","api","io","Feed","state","feed","registerToSocket","socket","on","newPost","setState","likedPost","map","post","_id","handleLike","id","get","response","data","author","place","more","image","like","comment","send","likes","description","hashtags"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport api from '../services/api'\r\nimport io from 'socket.io-client'\r\n\r\nimport './Feed.css'\r\n\r\nimport more from '../assets/more.svg'\r\nimport like from '../assets/like.svg'\r\nimport comment from '../assets/comment.svg'\r\nimport send from '../assets/send.svg'\r\n\r\nclass Feed extends Component {\r\n    state = {\r\n        feed: [],\r\n    }\r\n\r\n    async componentDidMount() {  // Componente em tipo Classe, usa-se este metodo que faz com que seja executado automaticamente quando \r\n        const response = await api.get('posts')    //                                                o componente for montado em tela\r\n\r\n        this.registerToSocket()\r\n\r\n        this.setState({ feed: response.data })\r\n    }\r\n\r\n    registerToSocket = () => {\r\n        const socket = io('http://localhost:3333')\r\n\r\n        //para faze-lo ouvir a mensagens do backend 'post' e 'like'\r\n        socket.on('post', newPost => {\r\n            this.setState({ feed: [newPost, ...this.state.feed] }) //fazendo o post chegar como primeiro da lista\r\n        }) \r\n\r\n        socket.on('like', likedPost => {\r\n            this.setState({\r\n                feed: this.state.feed.map(post =>\r\n                    post._id === likedPost._id ? likedPost : post\r\n                )\r\n            })\r\n        })\r\n    }\r\n\r\n    handleLike = id => {\r\n        api.post(`/posts/${id}/like`)\r\n    }\r\n\r\n    render() { // Metodo obrigatorio quando escrito componente em tipo Classe!\r\n        return (\r\n            <section id=\"post-list\">\r\n                {this.state.feed.map(post => (\r\n                    <article key={post._id}>\r\n                        <header>\r\n                            <div className=\"user-info\">\r\n                                <span>{post.author}</span>\r\n                                <span className=\"place\">{post.place}</span>\r\n                            </div>\r\n                            <img src={more} alt=\"Mais\" />\r\n                        </header>\r\n\r\n                        <img src={`http://localhost:3333/files/${post.image}`} alt=\"\" />\r\n\r\n                        <footer>\r\n                            <div className=\"actions\">\r\n                                <button type=\"button\" onClick={() => this.handleLike(post._id)}>\r\n                                <img src={like} alt=\"Like\" />\r\n                                </button>\r\n                                <img src={comment} alt=\"Comment\" />\r\n                                <img src={send} alt=\"Send\" />\r\n                            </div>\r\n\r\n                            <strong>{post.likes}</strong>\r\n                            <p>\r\n                                {post.description}\r\n                                        <span>{post.hashtags}</span>\r\n                            </p>\r\n\r\n                        </footer>\r\n                    </article>\r\n                ))}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feed"]},"metadata":{},"sourceType":"module"}